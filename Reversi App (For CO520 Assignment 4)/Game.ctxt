#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ Models\ a\ two-player\ version\ of\ the\ Reversi\ game\ on\ \r\n\ the\ "board"\ shown\ in\ the\ main\ area\ of\ the\ application\r\n\ window\ and\ updates\ the\ other\ areas\ accordingly.\r\n\r\n\ @author\ Radiance\ O.\ Ngonnase\r\n\ @version\ 2021.05.19\r\n
comment1.params=reversi
comment1.target=Game(Reversi)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Game\r\n
comment10.params=restoredStateData
comment10.target=void\ restore(java.util.HashMap)
comment10.text=\r\n\ Restore\ a\ saved\ game\ using\ the\ state\ data\ gotten\ from\ its\ corresponding\ save\ file.\r\n\ \r\n\ @throws\ \ CorruptedSaveFileException\ \ If\ the\ save\ file\ is\ malformed/corrupted.\r\n\ \r\n
comment11.params=e
comment11.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Start\ this\ game\ on\ the\ board.\r\n
comment3.params=e
comment3.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment4.params=button
comment4.target=void\ move(Board.CustomButton)
comment4.text=\r\n\ Carry\ out\ the\ processing\ related\ to\ making\r\n\ a\ move\ at\ a\ specific\ coordinate\ of\ the\ board.\r\n
comment5.params=button
comment5.target=int\ capture(Board.CustomButton)
comment5.text=\r\n\ Capture\ pieces\ starting\ from\ the\ x\ and\ y\ position\ of\ the\ current\ element\ in\ the\ board\r\n\ by\ looking\ into\ the\ eight\ possible\ directions\ to\ find\ another\ piece\ of\ the\ current\ player\ \r\n\ (skipping\ pieces\ of\ the\ opponent).\ If\ such\ a\ piece\ is\ found,\ then\ it\ flips\ all\ skipped\ pieces.\r\n\ (This\ method\ is\ invoked\ by\ the\ move\ method\ before\ the\ current\ player\ is\ changed.)\r\n
comment6.params=button\ showStatus
comment6.target=boolean\ moveIsLegal(Board.CustomButton,\ boolean)
comment6.text=\r\n\ Compute\tif\ a\ move\ would\tbe\ legal,\ and\ if\ not\ shows\ an\ \r\n\ appropriate\ message\ in\ the\ status\ bar.\ A\ move\ is\ legal\r\n\ only\ if\ it\ would\ capture\ at\ least\ one\ of\ the\ opponent's\r\n\ pieces.\r\n
comment7.params=
comment7.target=boolean\ canMove()
comment7.text=\r\n\ \tCheck\ based\ on\ the\ isMoveLegal\ method\ if\r\n\ \tthe\ current\ player\ can\ make\ a\ valid\ move.\r\n
comment8.params=index1\ index2\ text1\ text2\ text3
comment8.target=void\ updateFrame(int,\ int,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\r\n\ \tUpdate\ the\ score\ panels\ and\ the\ status\ bar\r\n\ \tof\ the\ main\ application\ window.\r\n
comment9.params=
comment9.target=java.util.HashMap\ getStateData()
comment9.text=\r\n\ \tGet\ all\ the\ details\ of\ the\ state\r\n\ \tof\ this\ game,\ stored\ in\ a\ HashMap.\r\n
numComments=12
